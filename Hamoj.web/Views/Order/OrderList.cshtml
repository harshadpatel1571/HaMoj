@using Hamoj.Service.Dto
@model List<Hamoj.Service.Dto.OrderDto>
@{
    Layout = "~/Views/Shared/_Vendor.cshtml";
    ViewData["Title"] = "Order List";
    var productList = ViewBag.ProductList as List<ProductDto>;
}
<partial name="~/Views/Shared/_Breadcrumb.cshtml" />
<div>
    <button class="btn btn-primary" id="btnrefresh">Refresh</button>
</div>
<div class="row" id="card">
    @foreach (var order in Model)
    {
        <div class="col-lg-3 col-md-6 mb-4 mb-lg-0" id="card-@order.ID">
            <div class="card shadow-sm border-0 rounded">
                <div class="card-body p-0">
                    <div class="p-4">
                        <div class="row">
                            <div class="col-12">
                                <h4 class="text-info">Office No: @(order.customerDto.Office_No)</h4>
                            </div>
                        </div>
                        <table class="table items-table">
                            <tbody>
                                @foreach (var product in productList)
                                {
                                    var qty = order.orderDetailsListDto.Where(x => x.ProductId == product.Id).Select(x => x.Qty).FirstOrDefault();
                                    <tr>
                                        <td>@product.Name</td>
                                        <td>
                                            <div class="d-flex align-items-center">
                                                <a class="btn btn-primary btn-xs me-1" onclick="decrementQty(this)"><i>-</i></a>
                                                <input type="text" class="form-control quantity-input_@order.ID text-center mx-0" value="@qty" id="@product.Id" style="width: 50px; padding: 5px;">
                                                <a class="btn btn-primary btn-xs ms-1" onclick="incrementQty(this)"><i>+</i></a>
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        <div class="input-group mt-1 justify-content-center">
                            <button class="btn btn-primary btn-sm dropdown-toggle col-auto" type="button" data-bs-toggle="dropdown" aria-expanded="false">Action</button>
                            <div class="dropdown-menu">
                                <a class="dropdown-item text-success" href="javascript:void(0)" onclick="confirmOrder(@order.ID, 1)">Accept Order</a>
                                <a class="dropdown-item text-danger" href="javascript:void(0)" onclick="confirmOrder(@order.ID, 2)">Cancel Order</a>
                                <a class="dropdown-item text-info" href="javascript:void(0)" onclick="Assign(@order.ID)">Assign to</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

<div class="modal fade" id="exampleModalCenter">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-body">
                <select class="default-select form-control wide mb-3 col-md-6" id="VendorUserId" asp-items="@ViewBag.UserList">
                </select>
                <input type="hidden" name="name" value="" id="OrderId" />
            </div>
            <div class="modal-footer">
                <div class="row w-30">
                    <div class="col-6">
                        <button type="button" class="btn btn-primary btn-sm w-100" data-bs-dismiss="modal" id="btnassign" onclick="UserAssign()">Assign</button>
                    </div>
                    <div class="col-6">
                        <button type="button" class="btn btn-danger btn-sm w-100" id="btnCancel">Cancel</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        function incrementQty(element) {
            var input = element.previousElementSibling;
            var currentValue = parseInt(input.value);
            input.value = currentValue + 1;
        }

        function decrementQty(element) {
            var input = element.nextElementSibling;
            var currentValue = parseInt(input.value);
            if (currentValue > 0) {
                input.value = currentValue - 1;
            }
        }

        $("#btnrefresh").click(function(){
            window.location.reload();
        })

        function confirmOrder(OrderId, orderStatus) {
            let actionText = orderStatus === 1 ? "Confirm" : "Cancel";
            let successMessage = orderStatus === 1 ? "Order Confirmed" : "Order Canceled";
            let confirmButtonText = orderStatus === 1 ? "Yes, confirm it!" : "Yes, cancel it!";
            let buttonColor = "#3085d6";

            Swal.fire({
                title: `Are you sure?`,
                text: `You won't be able to revert this!`,
                icon: orderStatus === 1 ? "success" : "error",
                showCancelButton: true,
                confirmButtonColor: buttonColor,
                cancelButtonColor: '#d33',
                confirmButtonText: confirmButtonText,
                cancelButtonText: "No, cancel!",
                reverseButtons: false
            }).then((result) => {
                if (result.isConfirmed) {
                    var Order = [];
                    $(".quantity-input_" + OrderId).each(function () {
                        let productId = $(this).attr('id');
                        let qty = $(this).val();
                        if (qty > 0) {
                            Order.push({ id: productId, qty: qty });
                        }
                    });
                    $.ajax({
                        url: '/Order/ConfirmOrder',
                        type: 'POST',
                        data: { id: OrderId, status: orderStatus, qty: Order },
                        success: function (result) {
                            if (result.status) {
                                Swal.fire({
                                    title: successMessage,
                                    text: `Your order has been Added.`,
                                    icon: 'success'
                                });
                                $("#card-" + OrderId).remove();
                            } else {
                                Swal.fire({
                                    title: 'Failed!',
                                    text: 'Failed to update the order.',
                                    icon: 'error'
                                });
                            }
                        },
                        error: function (xhr, status, error) {
                            // console.error('AJAX error:', error);
                            Swal.fire({
                                title: 'Error!',
                                text: 'An error occurred while processing your request.',
                                icon: 'error'
                            });
                        }
                    });
                }
            });
        }

        function Assign(OrderId) {
            $('#exampleModalCenter').modal('show');
            $('#OrderId').val(OrderId);
        };

        $('#btnCancel').click(function () {
            $('#exampleModalCenter').modal('hide');
        });

        function UserAssign() {
            var data = $('#VendorUserId').val();
            var OrderId = $('#OrderId').val();
            var Order = [];
            $(".quantity-input_" + OrderId).each(function () {
                let productId = $(this).attr('id');
                let qty = $(this).val();
                if (qty > 0) {
                    Order.push({ id: productId, qty: qty });
                }
            });
            $.ajax({
                url: '/Order/AssignOrder',
                type: 'POST',
                data: { VendorUserId: data, OrderId: OrderId,qty: Order },
                success: function (result) {
                    $("#card-" + OrderId).remove();
                    $('#exampleModalCenter').modal('hide');
                },
                error: function (xhr, status, error) {
                    // console.error('AJAX error:', error);
                    Swal.fire({
                        title: 'Error!',
                    });
                }
            });
        }
    </script>
}