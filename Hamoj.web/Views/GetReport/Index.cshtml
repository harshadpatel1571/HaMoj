@model List<Hamoj.Service.Dto.OrderDto>

@{
    Layout = "~/Views/Shared/_Customer.cshtml";
    ViewData["Title"] = "View Report";
}

<partial name="~/Views/Shared/_Breadcrumb.cshtml" />

<div class="col-12">
    <div class="card">
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-3">
                    <label for="fromDate" class="form-label">From Date</label>
                    <input type="date" id="fromDate" class="form-control">
                </div>
                <div class="col-md-3">
                    <label for="toDate" class="form-label">To Date</label>
                    <input type="date" id="toDate" class="form-control">
                </div>
                <div class="col-md-3 align-self-end">
                    <button id="btnSearch" class="btn btn-primary">Search</button>
                    <button id="btnRefresh" class="btn btn-primary">Refresh</button>
                </div>
            </div>

            <div class="table-responsive">
                <table id="grid" class="table table-striped table-bordered" style="width:100%">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Date</th>
                            <th>Grand Total</th>
                            <th>Confirm By</th>
                            <th>Payment Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan="2" style="text-align:right">Total:</th>
                            <th id="OverallTotal"></th>
                            <th></th>
                        </tr>
                    </tfoot>
                </table>
            </div>

        </div>
    </div>
</div>

<div class="modal fade" id="exampleModalCenter">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Order Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="margin-left:auto;"></button>
            </div>
            <div class="modal-body">
                <table class="table" id="viewdetails">
                    <thead>
                        <tr>
                            <th>Product</th>
                            <th>Qty</th>
                            <th>Price</th>
                            <th>Total</th>
                        </tr>
                    </thead>
                    <tbody id="tbodydetails">
                    </tbody>
                </table>
                <b id="grandtotal" class="text-primary"></b>
            </div>
            <input type="hidden" id="Id" />
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var months = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'];
        var monthDate = new Date();
        var mm = new Date(monthDate.getFullYear(), monthDate.getMonth() + 1, 0).getDate();
        $('#fromDate').val(monthDate.getFullYear() + '-' + months[monthDate.getMonth()] + '-' + '01');
        $('#toDate').val(monthDate.getFullYear() + '-' + months[monthDate.getMonth()] + '-' + mm);

        const columns = [
            { data: 'id' },
            {
                data: 'create_Date',
                render: function (data, type, row) {
                    var date = new Date(data);
                    var day = date.getDate().toString().padStart(2, '0');
                    var month = (date.getMonth() + 1).toString().padStart(2, '0');
                    var year = date.getFullYear();
                    return `${day}/${month}/${year}`;
                }
            },
            { data: 'grandTotal' },
            { data: 'userName' },
            {
                data: 'orderPaymentStatus',
                render: function (data, type, row) {
                    if (data === 1) {
                        return 'Pending';
                    } else if (data === 2) {
                        return 'Paid';
                    } 
                }
            },
            {
                data: null,
                render: function (data, type, row) {
                    console.log(data);
                    return `<div class="d-flex">
                                        <a class="btn btn-primary shadow btn-xs sharp me-1" data-id="${row.id}"  onclick="getOrderDetails(${row.id})">
                                        <i class="fa-solid fa-eye"></i>
                                        </a>
                                        </div>`;
                }
            }
        ];

        function search(d) {
            d.fromDate = $('#fromDate').val();
            d.toDate = $('#toDate').val();
        }

        let footerPaid = function (row, data, start, end, display) {
            var api = this.api();

            var intVal = function (i) {
                return typeof i === 'string' ? i.replace(/[\$,]/g, '') * 1 : typeof i === 'number' ? i : 0;
            };


            var columnsToUpdate = [2];
            function updateFooter(columnIndex) {
                var sum = api.column(columnIndex).data().reduce(function (a, b) {
                    return intVal(a) + intVal(b);
                }, 0);

                $(api.column(columnIndex).footer()).html(sum.toLocaleString('en-IN'));

            }
            columnsToUpdate.forEach(function (columnIndex) {
                updateFooter(columnIndex);
            });

        }

        $(document).ready(function () {
            BindGridWithFilter("/GetReport/GetReport", columns, false, false, search, footerPaid);
        });

        $("#btnSearch").click(function () {
            if ($('#fromDate').val() == '' && $('#toDate').val() == '') {
                return;
            }

            const table = $("#grid").DataTable();
            table.ajax.reload(null, false);
        });

        function getOrderDetails(orderId) {
            $('#exampleModalCenter').modal('show');
            var id = orderId;
            $.ajax({
                url: '/GetReport/GetOrderDetails',
                type: 'POST',
                data: { id: id },
                success: function (response) {
                    $('#tbodydetails').empty();
                    $('#grandtotal').empty();
                    var grandTotal = 0;

                    $.each(response.data, function (key, value) {
                        console.log(value);
                        var row = '<tr>';
                        row += '<td>' + value.productDto.name + '</td>';
                        row += '<td>' + value.qty + '</td>';
                        row += '<td>' + value.amount + '</td>';
                        row += '<td>' + value.totalAmounnt + '</td>';
                        row += '</tr>';
                        $('#tbodydetails').append(row);

                        grandTotal += value.totalAmounnt;
                    });

                    $('#grandtotal').text('Grand Total : ' + grandTotal);
                    $('#OverallTotal').text('Grand Total : ' + grandTotal);

                },
                error: function (xhr, status, error) {
                    console.error("AJAX request failed:", status, error);
                }
            });
        }


        $("#btnRefresh").click(function () {
            location.reload();
        })
    </script>
}
